#!/bin/bash
set -e

echo "üîß Running TypeScript environment health check..."

# Check Node.js installation
if command -v node >/dev/null 2>&1; then
    NODE_VERSION=$(node --version)
    echo "‚úÖ Node.js: $NODE_VERSION"
else
    echo "‚ùå Node.js not installed"
    echo "   Install from: https://nodejs.org/"
    exit 1
fi

# Check npm installation
if command -v npm >/dev/null 2>&1; then
    NPM_VERSION=$(npm --version)
    echo "‚úÖ npm: $NPM_VERSION"
else
    echo "‚ùå npm not found"
    exit 1
fi

# Check TypeScript installation (global or local)
if command -v npx >/dev/null 2>&1 && npx tsc --version >/dev/null 2>&1; then
    TS_VERSION=$(npx tsc --version)
    echo "‚úÖ TypeScript: $TS_VERSION"
elif command -v tsc >/dev/null 2>&1; then
    TS_VERSION=$(tsc --version)
    echo "‚úÖ TypeScript: $TS_VERSION"
else
    echo "‚ö†Ô∏è  TypeScript not installed"
    echo "   Install with: npm install -g typescript"
fi

# Check package.json
if [ -f "package.json" ]; then
    echo "‚úÖ package.json found"
else
    echo "‚ö†Ô∏è  No package.json found"
fi

# Check tsconfig.json
if [ -f "tsconfig.json" ]; then
    echo "‚úÖ tsconfig.json found"
else
    echo "‚ö†Ô∏è  No tsconfig.json found"
fi

# Check TypeScript source directory
if [ -d "src/main/typescript" ] || [ -d "src" ]; then
    echo "‚úÖ TypeScript source directory exists"
else
    echo "‚ö†Ô∏è  No TypeScript source directory found"
fi

# Check test directory
if [ -d "src/test/typescript" ] || [ -d "test" ]; then
    echo "‚úÖ Test directory exists"
else
    echo "‚ö†Ô∏è  No test directory found"
fi

# Check node_modules
if [ -d "node_modules" ]; then
    echo "‚úÖ Dependencies installed"
else
    echo "‚ö†Ô∏è  Dependencies not installed (run: npm install)"
fi

echo "üéâ TypeScript environment health check completed!"