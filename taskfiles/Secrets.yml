version: '3'

vars:
  BWS_ACCESS_TOKEN: "${BWS_ACCESS_TOKEN}"
  BWS_PROJECT_ID: "${BWS_PROJECT_ID}"

tasks:
  check-bws:
    desc: Check Bitwarden Secrets Manager configuration
    silent: true
    cmds:
      - |
        if [ -z "{{.BWS_ACCESS_TOKEN}}" ]; then
          echo "❌ BWS_ACCESS_TOKEN environment variable not set"
          echo "   Set it with: export BWS_ACCESS_TOKEN=your_token_here"
          exit 1
        fi
        if [ -z "{{.BWS_PROJECT_ID}}" ]; then
          echo "❌ BWS_PROJECT_ID environment variable not set"
          echo "   Set it with: export BWS_PROJECT_ID=your_project_id_here"
          exit 1
        fi
        if ! command -v bws >/dev/null 2>&1; then
          echo "❌ Bitwarden Secrets CLI (bws) not installed"
          echo "   Install from: https://bitwarden.com/help/secrets-manager-cli/"
          exit 1
        fi
        echo "✅ Bitwarden Secrets Manager properly configured"
        echo "   Access Token: $(echo "{{.BWS_ACCESS_TOKEN}}" | head -c 8)..."
        echo "   Project ID: {{.BWS_PROJECT_ID}}"

  list-secrets:
    desc: List all secrets in the configured Bitwarden project
    deps: [check-bws]
    cmds:
      - bws secret list --project-id {{.BWS_PROJECT_ID}}

  get-secret:
    desc: Get a specific secret by name (SECRET_NAME=secret_name)
    deps: [check-bws]
    cmds:
      - |
        if [ -z "{{.SECRET_NAME}}" ]; then
          echo "❌ SECRET_NAME not provided"
          echo "Usage: task secrets:get-secret SECRET_NAME=your_secret_name"
          exit 1
        fi
        bws secret get "{{.SECRET_NAME}}" --project-id {{.BWS_PROJECT_ID}}

  create-secret:
    desc: Create a new secret (SECRET_NAME=name SECRET_VALUE=value)
    deps: [check-bws]
    cmds:
      - |
        if [ -z "{{.SECRET_NAME}}" ] || [ -z "{{.SECRET_VALUE}}" ]; then
          echo "❌ SECRET_NAME and SECRET_VALUE are required"
          echo "Usage: task secrets:create-secret SECRET_NAME=name SECRET_VALUE=value"
          exit 1
        fi
        bws secret create "{{.SECRET_NAME}}" "{{.SECRET_VALUE}}" --project-id {{.BWS_PROJECT_ID}}

  update-secret:
    desc: Update an existing secret (SECRET_NAME=name SECRET_VALUE=value)
    deps: [check-bws]
    cmds:
      - |
        if [ -z "{{.SECRET_NAME}}" ] || [ -z "{{.SECRET_VALUE}}" ]; then
          echo "❌ SECRET_NAME and SECRET_VALUE are required"
          echo "Usage: task secrets:update-secret SECRET_NAME=name SECRET_VALUE=value"
          exit 1
        fi
        bws secret edit "{{.SECRET_NAME}}" --value "{{.SECRET_VALUE}}" --project-id {{.BWS_PROJECT_ID}}

  delete-secret:
    desc: Delete a secret (SECRET_NAME=name)
    deps: [check-bws]
    cmds:
      - |
        if [ -z "{{.SECRET_NAME}}" ]; then
          echo "❌ SECRET_NAME not provided"
          echo "Usage: task secrets:delete-secret SECRET_NAME=name"
          exit 1
        fi
        bws secret delete "{{.SECRET_NAME}}" --project-id {{.BWS_PROJECT_ID}}

  doctor:
    desc: Run comprehensive Bitwarden Secrets health check
    cmds:
      - ./scripts/task/secrets/doctor.sh